Longest Sub-Array with Sum K

Given an array arr containing n integers and an integer k. Your task is to find the length of the longest Sub-Array with the sum of the elements equal to the given value k.

 

Examples:
 

Input :
arr[] = {10, 5, 2, 7, 1, 9}, k = 15
Output : 4
Explanation:
The sub-array is {5, 2, 7, 1}.
Input : 
arr[] = {-1, 2, 3}, k = 6
Output : 0
Explanation: 
There is no such sub-array with sum 6.
Expected Time Complexity: O(n).
Expected Auxiliary Space: O(n).

 

Constraints:
1<=n<=105
-105<=arr[i], K<=105


Solution-

class Solution{
    
   
    // Function for finding maximum and value pair
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        HashMap<Integer,Integer> map=new HashMap<>();
        int currSum=0; int maxlength=0;
        for(int i=0;i<N;i++){
            currSum+=A[i];
            if(currSum==K){
                maxlength=i+1;
            }
            if(map.containsKey(currSum-K)){
                maxlength=Math.max(maxlength,i-map.get(currSum-K));
            }
            if(!map.containsKey(currSum)){
                map.put(currSum,i);
            }
        }
        return maxlength;
    }
        
}