Leetcode 118. Pascal's Triangle

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30


Solution-
class Solution {

    public long nCr(int n, int r) {
        long ans = 1;
        for (int i = 0; i < r; i++) {
            ans = ans * (n - i )/ (i+1);
        }
        return ans;
    }

    public List<Integer> genRow(int r) {
        List<Integer> ans = new ArrayList<>();
        for (int i = 1; i <= r; i++) {
            ans.add((int)nCr(r-1, i-1));
        }
        return ans;
    }

    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();

        for (int i = 1; i <= numRows; i++) {
            ans.add(genRow(i));
        }
        return ans;
    }
}